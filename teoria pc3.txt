teoria

SEMANA11

Principales Funciones Agregadas:

Sum: Calcula la suma total de los valores de un conjunto de datos.
AVG: Calcula el valor promedio (media) de un conjunto de datos.
Count: Cuenta cuántos elementos hay en un conjunto de datos. Puede contar todas las filas o solo las no nulas.
Máx: Devuelve el valor más alto en un conjunto de datos.
Mín: Devuelve el valor más bajo en un conjunto de datos.
GROUP BY: Agrupa las filas de acuerdo con una o más columnas, y luego puedes aplicar funciones agregadas sobre esos grupos.
HAVING: Filtra los resultados de los grupos después de que se han aplicado las funciones agregadas.

SEMANA12


IN vs EXISTS: Usa IN cuando la subconsulta devuelve pocos resultados; usa EXISTS cuando la subconsulta puede devolver muchos resultados.
Funciones de Fecha: Son esenciales para segmentar, comparar y analizar datos temporales, pero su uso debe ser eficiente para no impactar negativamente en el rendimiento.
CAST vs. CONVERT: Usa CAST para conversiones simples y CONVERT cuando necesites un formato específico o detalles más complejos, especialmente en fechas.

Resumen de las Funciones de Cadena más Comunes:

Concatenación: CONCAT()
Longitud: LEN()
Extracción de subcadenas: SUBSTRING()
Cambio de mayúsculas/minúsculas: LOWER(), UPPER()
Eliminación de espacios: LTRIM(), RTRIM()

SENMANA13

Transact-SQL
Función: bloque de código que devuelve un valor; se usa para cálculos o transformaciones dentro de consultas.
Procedimiento almacenado: conjunto de instrucciones SQL que ejecuta acciones (insertar, actualizar, eliminar); puede recibir parámetros pero no devuelve un valor directo.
Variable: espacio temporal para guardar datos y usarlos dentro de consultas o procedimientos.
Condicional IF: permite ejecutar código según una condición (controla el flujo lógico).
Cursor: estructura que recorre filas una por una; útil para procesar registros individualmente, aunque menos eficiente que las operaciones por conjuntos.


SEMANA14

Manejo de Transacciones (Transact-SQL)

Una transacción es un conjunto de operaciones SQL que se ejecutan como una sola unidad de trabajo.
Su objetivo es mantener la integridad y coherencia de los datos: si una parte falla, todo se revierte.
Comandos principales
BEGIN TRANSACTION: inicia la transacción.
COMMIT: confirma los cambios realizados.
ROLLBACK: revierte los cambios si ocurre un error.
Las transacciones garantizan que los datos se mantengan consistentes, sobre todo al realizar múltiples operaciones dependientes, como transferencias de dinero o actualizaciones en cadena.
Savepoints
Permiten guardar un punto dentro de una transacción para revertir parcialmente si es necesario:
SAVE TRANSACTION punto1;
ROLLBACK TRANSACTION punto1;

